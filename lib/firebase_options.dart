// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyCP11qRmTdg2XcvXI9uJU-SXtByCQ2YNSc',
    appId: '1:182732287783:web:5b4c12b56edc894f608302',
    messagingSenderId: '182732287783',
    projectId: 'plancation-a1e81',
    authDomain: 'plancation-a1e81.firebaseapp.com',
    storageBucket: 'plancation-a1e81.appspot.com',
    measurementId: 'G-NMEHK70D4Q',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyCKfq68u1m4APyn4lgWWGANh4IiBcM5KJg',
    appId: '1:182732287783:android:592550c79179722e608302',
    messagingSenderId: '182732287783',
    projectId: 'plancation-a1e81',
    storageBucket: 'plancation-a1e81.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyAk_VUFYmyGuHvuh5d4i9kcziUTMp4q5PA',
    appId: '1:182732287783:ios:8577e852b5a4c1a5608302',
    messagingSenderId: '182732287783',
    projectId: 'plancation-a1e81',
    storageBucket: 'plancation-a1e81.appspot.com',
    iosClientId: '182732287783-nbq0ssts4jkhvlb05guvq25lsvpiceg6.apps.googleusercontent.com',
    iosBundleId: 'com.example.plancation',
  );

  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }
}
